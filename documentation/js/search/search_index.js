var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.906,1,1.434]],["body/controllers/AppController.html",[0,1.363,1,2.159,2,1.228,3,0.54,4,0.44,5,0.44,6,2.38,7,0.54,8,1.169,9,3.6,10,1.974,11,0.058,12,0.77,13,2.995,14,0.904,15,2.55,16,0.839,17,0.54,18,1.757,19,2.38,20,0.54,21,0.261,22,1.974,23,1.671,24,0.904,25,2.995,26,0.034,27,0.044,28,0.034]],["title/modules/AppModule.html",[29,1.226,30,1.434]],["body/modules/AppModule.html",[1,1.983,2,1.24,3,0.546,4,0.307,5,0.307,11,0.059,16,1.006,17,0.377,18,1.766,19,1.662,20,0.377,21,0.182,26,0.024,27,0.034,28,0.024,29,1.696,30,2.538,31,0.998,32,0.998,33,1.379,34,1.379,35,0.998,36,2.343,37,1.379,38,1.662,39,1.662,40,1.662,41,2.056,42,1.994,43,1.379,44,1.379,45,2.092,46,1.983,47,2.404,48,2.092,49,0.632,50,2.092,51,0.998,52,2.092,53,2.092,54,0.998,55,1.696,56,2.092,57,2.092,58,2.092,59,2.092,60,3.026,61,2.092,62,2.092,63,2.092,64,1.662,65,2.092,66,0.737,67,2.092,68,2.092,69,2.092,70,2.092,71,1.379,72,2.092]],["title/injectables/AppService.html",[18,1.054,73,0.463]],["body/injectables/AppService.html",[3,0.575,4,0.468,5,0.468,7,0.575,8,1.216,9,3.685,11,0.057,12,0.82,14,0.963,15,2.655,16,0.692,17,0.575,18,1.651,20,0.575,21,0.278,24,0.963,26,0.036,27,0.046,28,0.036,73,0.726,74,1.307,75,2.534,76,3.189,77,3.189,78,3.189]],["title/controllers/AuthController.html",[0,0.906,51,1.226]],["body/controllers/AuthController.html",[0,0.608,2,0.707,3,0.311,4,0.253,5,0.253,7,0.311,8,0.792,10,1.729,11,0.058,12,0.675,14,0.792,16,0.956,17,0.311,20,0.311,21,0.15,22,1.137,23,0.963,24,0.792,26,0.02,27,0.03,28,0.02,49,0.958,51,1.252,54,0.823,55,0.823,66,1.118,79,1.371,80,1.371,81,1.725,82,2.24,83,2.623,84,2.623,85,1.725,86,3.19,87,3.19,88,1.725,89,1.075,90,1.075,91,1.075,92,1.075,93,2.623,94,1.725,95,2.091,96,1.725,97,1.725,98,1.371,99,1.371,100,1.137,101,2.084,102,1.137,103,1.371,104,0.823,105,0.963,106,0.823,107,1.371,108,1.725,109,1.371,110,1.371,111,1.137,112,1.137,113,1.137,114,0.924,115,1.371,116,0.707,117,1.725,118,1.137,119,1.137,120,1.725,121,1.725,122,1.725,123,1.725,124,1.725,125,1.725,126,1.725,127,1.725,128,1.725,129,1.725,130,1.725,131,1.725,132,1.725,133,1.725,134,1.729,135,1.725,136,2.623,137,1.725,138,1.725,139,1.725,140,1.725,141,1.725,142,1.371,143,1.725,144,1.725,145,1.725,146,1.371,147,1.371,148,1.725,149,1.725,150,0.963,151,1.137,152,1.137,153,1.725,154,1.725,155,1.725,156,1.725]],["title/modules/AuthModule.html",[29,1.226,41,1.226]],["body/modules/AuthModule.html",[2,1.318,3,0.411,4,0.334,5,0.334,11,0.058,16,1.009,17,0.411,20,0.411,21,0.198,26,0.026,27,0.036,28,0.026,29,1.778,31,1.086,32,1.086,33,1.501,34,1.501,35,1.086,36,2.456,37,1.501,41,2.288,42,2.119,43,1.501,44,1.501,47,1.809,49,1.338,51,1.778,113,1.501,114,1.133,116,0.933,150,1.27,151,1.501,152,1.501,157,1.809,158,1.809,159,2.115,160,2.115,161,2.277,162,3.215,163,2.277,164,2.277,165,2.277,166,1.809,167,2.277,168,2.277,169,2.277,170,2.277]],["title/injectables/AuthService.html",[49,0.776,73,0.463]],["body/injectables/AuthService.html",[3,0.262,4,0.213,5,0.213,7,0.262,8,0.693,11,0.059,12,0.831,14,0.693,16,0.812,17,0.262,20,0.262,21,0.126,23,1.587,24,1.379,26,0.032,27,0.026,28,0.016,49,0.693,54,0.693,55,0.693,64,1.154,66,1.139,71,0.957,73,0.414,74,0.595,82,1.804,89,0.941,90,0.941,92,0.941,100,0.957,112,0.957,114,0.809,118,1.875,119,1.875,171,1.154,172,1.823,173,2.295,174,2.295,175,1.587,176,2.295,177,2.295,178,1.452,179,1.452,180,1.452,181,1.823,182,1.452,183,1.452,184,1.452,185,2.295,186,1.823,187,1.28,188,1.154,189,1.823,190,2.295,191,1.823,192,2.295,193,2.295,194,1.452,195,2.26,196,3.114,197,2.295,198,3.233,199,3.233,200,2.26,201,3.743,202,3.233,203,2.295,204,1.452,205,1.452,206,1.452,207,1.452,208,1.452,209,2.295,210,2.295,211,1.452,212,1.452,213,1.452,214,1.452,215,3.233,216,1.452,217,1.452,218,1.452,219,1.452,220,1.452,221,1.452,222,1.452,223,1.154,224,1.452,225,1.452,226,1.452,227,1.452,228,1.452]],["title/classes/AuthUserDtoDto.html",[21,0.224,106,1.226]],["body/classes/AuthUserDtoDto.html",[3,0.559,4,0.455,5,0.455,7,0.559,11,0.056,12,1.12,15,3.125,20,0.559,21,0.27,26,0.035,27,0.045,28,0.035,91,1.786,106,1.887,172,3.142,181,3.461,229,3.098,230,2.461,231,3.955,232,4.357,233,3.098,234,3.098,235,3.098,236,3.098]],["title/injectables/JwtAuthGuard.html",[73,0.463,237,1.434]],["body/injectables/JwtAuthGuard.html",[3,0.792,4,0.406,5,0.406,7,0.499,8,1.109,11,0.058,12,0.711,14,0.835,16,0.797,17,0.499,20,0.499,21,0.241,24,0.835,26,0.031,27,0.042,28,0.031,66,0.974,73,0.662,74,1.134,89,1.134,90,1.134,92,1.134,115,2.197,116,1.134,134,1.823,196,3.276,237,2.049,238,2.918,239,2.197,240,3.673,241,3.673,242,4.573,243,2.766,244,2.918,245,1.823,246,2.766]],["title/injectables/JwtStrategy.html",[73,0.463,159,1.226]],["body/injectables/JwtStrategy.html",[3,0.463,4,0.377,5,0.377,7,0.463,8,1.055,11,0.059,12,0.899,14,0.776,16,0.925,17,0.463,20,0.463,21,0.224,24,0.776,26,0.029,27,0.04,28,0.029,73,0.63,74,1.053,82,2.216,89,1.053,90,1.053,91,1.053,92,1.053,104,1.226,114,1.231,116,1.053,150,1.433,159,1.668,175,2.216,187,1.95,200,2.041,245,1.693,247,2.041,248,2.569,249,3.495,250,2.569,251,2.569,252,2.569,253,2.041,254,1.693,255,2.041,256,2.041,257,2.569,258,2.569,259,2.569,260,2.569,261,2.569,262,2.569]],["title/injectables/LocalStrategy.html",[73,0.463,160,1.226]],["body/injectables/LocalStrategy.html",[3,0.388,4,0.316,5,0.316,7,0.388,8,0.932,11,0.058,12,0.794,14,0.649,16,0.972,17,0.388,20,0.388,21,0.187,22,1.417,24,0.649,26,0.024,27,0.035,28,0.024,49,1.313,66,1.087,71,1.417,73,0.557,74,0.881,82,2.014,89,1.265,90,1.265,91,0.881,92,1.265,95,2.034,99,1.708,100,1.417,102,1.417,104,1.026,105,1.2,106,1.026,107,1.708,113,1.417,114,1.087,116,0.881,134,2.034,142,2.452,147,1.708,150,1.2,151,1.417,152,1.417,160,1.473,175,1.2,187,1.722,191,2.452,244,2.868,245,1.417,253,1.708,254,1.417,255,1.708,256,1.708,263,1.708,264,2.15,265,2.15,266,2.15,267,2.15,268,1.708,269,2.15,270,2.15,271,3.087,272,2.15,273,2.15,274,2.15,275,2.15,276,2.15,277,2.15,278,2.15,279,2.15]],["title/controllers/LoggedController.html",[0,0.906,46,1.434]],["body/controllers/LoggedController.html",[0,0.872,2,1.014,3,0.446,4,0.363,5,0.363,7,0.446,8,1.029,10,1.631,11,0.057,12,0.637,14,0.747,16,0.987,17,0.446,20,0.446,21,0.215,23,1.381,24,0.747,26,0.028,27,0.039,28,0.028,46,1.901,54,1.181,55,1.181,66,0.872,80,1.966,86,3.096,87,3.335,89,1.014,90,1.014,91,1.014,92,1.014,95,2.568,98,1.966,101,1.966,102,2.245,103,1.966,104,1.181,105,1.381,111,1.631,112,1.631,114,1.2,118,1.631,119,1.631,146,1.966,175,1.381,237,1.381,280,1.966,281,3.897,282,2.475,283,2.475,284,2.475,285,2.475,286,2.475,287,2.475,288,2.475,289,2.475,290,2.475,291,2.475]],["title/coverage.html",[292,2.304]],["body/coverage.html",[0,1.421,1,1.475,5,0.388,6,2.101,11,0.057,18,1.084,21,0.23,26,0.03,27,0.04,28,0.03,35,1.262,46,1.475,49,0.798,51,1.262,66,0.932,73,0.812,75,2.101,79,2.101,91,1.084,106,1.262,159,1.262,160,1.262,171,2.101,195,2.101,223,3.924,230,2.101,237,1.475,238,2.101,239,2.101,247,2.101,263,2.101,280,2.101,292,1.743,293,2.644,294,2.644,295,2.644,296,4.315,297,4.032,298,2.644,299,2.644,300,2.101,301,2.644,302,2.644,303,2.644]],["title/dependencies.html",[32,1.473,304,2.152]],["body/dependencies.html",[11,0.059,17,0.472,26,0.03,27,0.04,28,0.03,32,1.249,54,1.249,55,1.249,104,1.249,105,1.461,109,2.08,110,2.813,111,1.726,114,0.923,116,1.073,166,2.08,186,2.08,187,1.461,188,2.08,189,2.08,254,2.644,268,2.08,305,2.619,306,4.298,307,2.619,308,2.619,309,2.619,310,2.619,311,2.619,312,2.619,313,2.619,314,2.619,315,2.619,316,2.619,317,3.541,318,2.619,319,2.619,320,2.619,321,2.619,322,2.619,323,2.619,324,2.619,325,2.619,326,2.619,327,2.619,328,2.619,329,2.619,330,2.619]],["title/miscellaneous/functions.html",[331,1.709,332,2.453]],["body/miscellaneous/functions.html",[7,0.684,11,0.051,26,0.043,27,0.051,28,0.043,35,2.274,300,3.013,331,3.013,332,3.013,333,3.793]],["title/index.html",[7,0.388,334,2.152,335,2.152]],["body/index.html",[4,0.35,11,0.057,26,0.027,27,0.038,28,0.027,292,1.573,336,2.388,337,2.388,338,3.324,339,2.388,340,2.388,341,2.388,342,2.388,343,2.388,344,2.388,345,2.388,346,3.823,347,2.388,348,2.388,349,2.388,350,2.388,351,4.616,352,2.388,353,2.388,354,2.388,355,4.5,356,2.388,357,2.388,358,3.324,359,2.388,360,2.388,361,2.388,362,2.388,363,3.324,364,3.324,365,2.388,366,2.388,367,2.388,368,3.324,369,3.324,370,2.388,371,2.388,372,2.388,373,2.388,374,2.388,375,1.897,376,2.388,377,2.388,378,2.388,379,2.388,380,2.388,381,2.388,382,2.388,383,2.388,384,2.388,385,2.388,386,2.388,387,2.388,388,2.388,389,2.388,390,2.388,391,2.388,392,2.388,393,2.388]],["title/modules.html",[31,1.668]],["body/modules.html",[11,0.05,26,0.042,27,0.05,28,0.042,30,2.072,31,1.772,41,1.772,375,3.514,394,4.424,395,4.424,396,4.424]],["title/overview.html",[397,2.778]],["body/overview.html",[2,1.157,11,0.055,18,1.708,21,0.246,26,0.032,27,0.042,28,0.032,29,1.347,30,2.638,31,1.347,32,1.347,33,1.861,34,1.861,35,1.347,36,1.861,37,1.861,38,2.243,39,2.243,40,2.243,41,2.363,42,2.454,43,1.861,44,1.861,49,1.258,74,1.157,157,2.243,158,2.243,159,1.988,160,1.988,397,2.243,398,2.823,399,2.823,400,2.823,401,2.823]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthUserDtoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["0.0.3",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["0.36.0",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":401,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["13.5.2",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":398,"title":{},"body":{"overview.html":{}}}],["3",{"_index":399,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["3.3.4",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":400,"title":{},"body":{"overview.html":{}}}],["6.6.3",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["a.trim",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":376,"title":{},"body":{"index.html":{}}}],["app",{"_index":353,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_uniqueid",{"_index":231,"title":{},"body":{"classes/AuthUserDtoDto.html":{}}}],["app_uniqueid:string",{"_index":236,"title":{},"body":{"classes/AuthUserDtoDto.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":344,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["async",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["auth.controller",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":286,"title":{},"body":{"controllers/LoggedController.html":{}}}],["auth.guard.ts",{"_index":239,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:7",{"_index":243,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/jwt",{"_index":285,"title":{},"body":{"controllers/LoggedController.html":{}}}],["authcontroller",{"_index":51,"title":{"controllers/AuthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":246,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":41,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":386,"title":{},"body":{"index.html":{}}}],["authredirect",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["authredirect(@query",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["authredirect(query",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["authservice",{"_index":49,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authuserdtodto",{"_index":106,"title":{"classes/AuthUserDtoDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthUserDtoDto.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["authweb",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["authweb(@res",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["authweb(res",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["await",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["backers",{"_index":377,"title":{},"body":{"index.html":{}}}],["body",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoggedController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":396,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":394,"title":{},"body":{"modules.html":{}}}],["building",{"_index":339,"title":{},"body":{"index.html":{}}}],["catch",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":21,"title":{"classes/AuthUserDtoDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthUserDtoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":229,"title":{},"body":{"classes/AuthUserDtoDto.html":{}}}],["cleartimeout(timeouterror",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["client",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["client.getdatosdelusuario",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["client.validate(args",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["code",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["config",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{},"dependencies.html":{}}}],["config.get(\"globals.expjwt",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["config.get(\"globals.timeout",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["config.get(\"keys.aeskey",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["config.get(\"keys.jwtkey",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["const",{"_index":271,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{}}}],["constructor(authservice",{"_index":264,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LoggedController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LoggedController.html":{},"coverage.html":{}}}],["controller('islogged",{"_index":287,"title":{},"body":{"controllers/LoggedController.html":{}}}],["controller('login",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/LoggedController.html":{},"overview.html":{}}}],["controllers/auth/auth.controller",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/auth/auth.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/auth/auth.service",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/logged/logged.controller",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["coverage",{"_index":292,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crypto",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["cryptojs",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["cryptojs.aes.decrypt(query.user.replace",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["de",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LoggedController.html":{}}}],["decrypted",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["decrypted.tostring(cryptojs.enc.utf8).split",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["decryptval",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["default",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["defaultmeta",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthUserDtoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":345,"title":{},"body":{"index.html":{}}}],["development",{"_index":354,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["dto/authuserdto.dto",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["e",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2e",{"_index":365,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":340,"title":{},"body":{"index.html":{}}}],["err",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["excedido",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["expiresin",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthUserDtoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["express",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoggedController.html":{},"dependencies.html":{}}}],["extends",{"_index":245,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["extractjwt",{"_index":252,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":259,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthUserDtoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{},"coverage.html":{}}}],["format",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["framework",{"_index":338,"title":{},"body":{"index.html":{}}}],["function",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["function(err",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["functions",{"_index":332,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getauthsoap",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthsoap(args",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getrolesoap",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["getrolesoap(token_app_client",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["getrolesoap(token_app_client,username",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":334,"title":{"index.html":{}},"body":{}}],["grow",{"_index":372,"title":{},"body":{"index.html":{}}}],["guid",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["handlerequest",{"_index":240,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":241,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hello",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":383,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["httpexception('error",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception('tiempo",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":390,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["httpstatus.internal_server_error",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.ok",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.request_timeout",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpstatus.unauthorized",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["identifier",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["if(resultjson.length",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(rolessoap.result",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["if(validator.isjson(result.getdatosdelusuarioresult",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["ignoreexpiration",{"_index":260,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthUserDtoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthUserDtoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{}}}],["injectable",{"_index":73,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["installation",{"_index":350,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":352,"title":{},"body":{"index.html":{}}}],["islogged",{"_index":281,"title":{},"body":{"controllers/LoggedController.html":{}}}],["islogged(@res",{"_index":290,"title":{},"body":{"controllers/LoggedController.html":{}}}],["islogged(res",{"_index":282,"title":{},"body":{"controllers/LoggedController.html":{}}}],["join",{"_index":379,"title":{},"body":{"index.html":{}}}],["js",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["json.parse(result.getdatosdelusuarioresult",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["jsonwebtoken",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{},"dependencies.html":{}}}],["jwt",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{},"dependencies.html":{}}}],["jwt.sign",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["jwt.strategy",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":237,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/LoggedController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":258,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtstrategy",{"_index":159,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":387,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["level",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":393,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":369,"title":{},"body":{"index.html":{}}}],["local",{"_index":268,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["localstrategy",{"_index":160,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["loggedcontroller",{"_index":46,"title":{"controllers/LoggedController.html":{}},"body":{"modules/AppModule.html":{},"controllers/LoggedController.html":{},"coverage.html":{}}}],["logger",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/LoggedController.html":{}}}],["login",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthUserDtoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{}}}],["miscellaneous",{"_index":331,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":368,"title":{},"body":{"index.html":{}}}],["mode",{"_index":358,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":382,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":388,"title":{},"body":{"index.html":{}}}],["name",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{}}}],["nest",{"_index":346,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":392,"title":{},"body":{"index.html":{}}}],["nestjs/cli",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{},"coverage.html":{}}}],["node.js",{"_index":337,"title":{},"body":{"index.html":{}}}],["npm",{"_index":351,"title":{},"body":{"index.html":{}}}],["null",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["open",{"_index":370,"title":{},"body":{"index.html":{}}}],["optional",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["overview",{"_index":397,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":304,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{}}}],["passport",{"_index":254,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":255,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":256,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":232,"title":{},"body":{"classes/AuthUserDtoDto.html":{}}}],["payk/nestjs",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/LoggedController.html":{},"dependencies.html":{}}}],["payload",{"_index":251,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.userdata",{"_index":262,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permissions",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["please",{"_index":380,"title":{},"body":{"index.html":{}}}],["post",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoggedController.html":{}}}],["prefix",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoggedController.html":{}}}],["private",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/LoggedController.html":{}}}],["production",{"_index":360,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":336,"title":{},"body":{"index.html":{}}}],["project",{"_index":371,"title":{},"body":{"index.html":{}}}],["promise",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["properties",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthUserDtoDto.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["query",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["query,@res",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["read",{"_index":381,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/LoggedController.html":{}}}],["reflect",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["reject",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["repository",{"_index":349,"title":{},"body":{"index.html":{}}}],["req",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{}}}],["request",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{}}}],["res",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoggedController.html":{}}}],["res.result",{"_index":274,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["res.status(200).json({statuscode:200,message:\"valid",{"_index":291,"title":{},"body":{"controllers/LoggedController.html":{}}}],["res.status(httpstatus.ok).json({token:req.user",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(rolessoap.code).json({token:token",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["res:any",{"_index":272,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["resolve",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve({result",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve({result:false,code:httpstatus.unauthorized,data",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve({result:true,code:httpstatus.ok,data:resultjson[0",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["response",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoggedController.html":{}}}],["response,@request",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["respuesta",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["resroles.data",{"_index":279,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["resroles.result",{"_index":277,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["resroles:any",{"_index":275,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthUserDtoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["result.validateresult.replace(/\"/g",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["result:false,data:{},code:httpstatus.internal_server_error",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["result:false,guid:'',code:httpstatus.internal_server_error",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["resultjson",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["resultjson[0].roles",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["resultjson[0].roles.split(\",\").map((a",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthUserDtoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{}}}],["rimraf",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["rolessoap.code",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["rolessoap.data",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["rolessoap:any",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["run",{"_index":355,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":341,"title":{},"body":{"index.html":{}}}],["secret",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":261,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":342,"title":{},"body":{"index.html":{}}}],["service",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["servidor",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["settimeout(function",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["side",{"_index":343,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{}}}],["soap",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["soap.createclient(config.get(\"soap.auth",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["soap.createclient(config.get(\"soap.roles",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthUserDtoDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{},"index.html":{}}}],["sponsors",{"_index":374,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:6",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["src/controllers/auth/auth.controller.ts",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/controllers/auth/auth.controller.ts:18",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/controllers/auth/auth.controller.ts:23",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/controllers/auth/auth.module.ts",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/controllers/auth/auth.service.ts",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/controllers/auth/auth.service.ts:10",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/controllers/auth/auth.service.ts:14",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/controllers/auth/auth.service.ts:43",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/controllers/auth/dto/authuserdto.dto.ts",{"_index":230,"title":{},"body":{"classes/AuthUserDtoDto.html":{},"coverage.html":{}}}],["src/controllers/auth/dto/authuserdto.dto.ts:2",{"_index":235,"title":{},"body":{"classes/AuthUserDtoDto.html":{}}}],["src/controllers/auth/dto/authuserdto.dto.ts:3",{"_index":234,"title":{},"body":{"classes/AuthUserDtoDto.html":{}}}],["src/controllers/auth/dto/authuserdto.dto.ts:4",{"_index":233,"title":{},"body":{"classes/AuthUserDtoDto.html":{}}}],["src/controllers/auth/jwt",{"_index":238,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/controllers/auth/jwt.strategy.ts",{"_index":247,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/controllers/auth/jwt.strategy.ts:17",{"_index":250,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/controllers/auth/jwt.strategy.ts:8",{"_index":248,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/controllers/auth/local.strategy.ts",{"_index":263,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/controllers/auth/local.strategy.ts:10",{"_index":265,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/controllers/auth/local.strategy.ts:15",{"_index":267,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/controllers/logged/logged.controller.ts",{"_index":280,"title":{},"body":{"controllers/LoggedController.html":{},"coverage.html":{}}}],["src/controllers/logged/logged.controller.ts:16",{"_index":284,"title":{},"body":{"controllers/LoggedController.html":{}}}],["src/main.ts",{"_index":300,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":356,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":359,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":361,"title":{},"body":{"index.html":{}}}],["started",{"_index":335,"title":{"index.html":{}},"body":{}}],["starter",{"_index":348,"title":{},"body":{"index.html":{}}}],["statements",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":384,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":253,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthUserDtoDto.html":{}}}],["super",{"_index":257,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super({passreqtocallback",{"_index":269,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["support",{"_index":375,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":395,"title":{},"body":{"modules.html":{}}}],["table",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":364,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":367,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":366,"title":{},"body":{"index.html":{}}}],["tests",{"_index":363,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":373,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.getauthsoap(req.body",{"_index":273,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.getrolesoap(query.app_uniqueid,decryptval[0",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getrolesoap(req.body.app_uniqueid,req.body.username",{"_index":276,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["throw",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["timeouterror",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["token",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoggedController.html":{}}}],["token_app_client",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["token_app_client:token_app_client",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":385,"title":{},"body":{"index.html":{}}}],["transports",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["try",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["twitter",{"_index":391,"title":{},"body":{"index.html":{}}}],["type",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthUserDtoDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggedController.html":{},"coverage.html":{}}}],["types/crypto",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":347,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":244,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unit",{"_index":362,"title":{},"body":{"index.html":{}}}],["useguards",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoggedController.html":{}}}],["useguards(authguard('local",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":289,"title":{},"body":{"controllers/LoggedController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":283,"title":{},"body":{"controllers/LoggedController.html":{}}}],["useguards(undefined)@post",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":242,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["userdata",{"_index":278,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["username",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthUserDtoDto.html":{}}}],["username:username",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["uuid",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["validate",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["validate(@request",{"_index":270,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(guid",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate(payload",{"_index":249,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(req",{"_index":266,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validator",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["value",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["watch",{"_index":357,"title":{},"body":{"index.html":{}}}],["website",{"_index":389,"title":{},"body":{"index.html":{}}}],["winston",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/LoggedController.html":{},"dependencies.html":{}}}],["winston.format.colorize",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.combine",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.json",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.timestamp",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.console",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonconsoleformat",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonlogger",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/LoggedController.html":{}}}],["winstonlogger(authcontroller.name",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["winstonlogger(authservice.name",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["winstonlogger(loggedcontroller.name",{"_index":288,"title":{},"body":{"controllers/LoggedController.html":{}}}],["winstonmodule,winstonconsoleformat",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule.forroot",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":378,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            LoggedController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthService } from './controllers/auth/auth.service';\nimport { AuthController } from './controllers/auth/auth.controller';\nimport { WinstonModule,winstonConsoleFormat } from '@payk/nestjs-winston';\nimport { LoggedController } from './controllers/logged/logged.controller';\nimport * as winston from 'winston';\nimport {AuthModule} from \"./controllers/auth/auth.module\";\n\n@Module({\n  imports: [\n    WinstonModule.forRoot({\n      level: 'info',\n      format: winston.format.json(),\n      defaultMeta: { service: 'default' },\n      transports: [\n\n        new winston.transports.Console({\n          format: winston.format.combine(\n              winston.format.timestamp(),\n              winston.format.colorize({ all: true }),\n              winstonConsoleFormat\n          )\n        })\n      ]\n    }),\n      AuthModule\n  ],\n  controllers: [AppController, LoggedController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                login\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authRedirect\n                            \n                            \n                                    Async\n                                authWeb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            authRedirect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authRedirect(query, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/controllers/auth/auth.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            authWeb\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authWeb(res: Response, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post()\n                \n            \n\n            \n                \n                    Defined in src/controllers/auth/auth.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, Get, HttpException, HttpStatus, Post, Request, Query, Res, UseGuards} from '@nestjs/common';\nimport * as jwt from 'jsonwebtoken';\nimport {AuthUserDtoDto} from './dto/AuthUserDto.dto';\nimport * as CryptoJS from 'crypto-js';\nimport {Response} from \"express\";\nimport { WinstonLogger } from '@payk/nestjs-winston';\nimport { AuthService } from './auth.service';\nimport * as config from \"config\";\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('login')\nexport class AuthController {\n    private readonly logger = new WinstonLogger(AuthController.name);\n    constructor(private authService: AuthService) {}\n\n    @UseGuards(AuthGuard('local'))\n    @Post()\n    async authWeb(@Res() res: Response,@Request() req){\n        return res.status(HttpStatus.OK).json({token:req.user})\n    }\n\n    @Get()\n    async authRedirect(@Query() query,@Res() res: Response){\n        let decrypted = CryptoJS.AES.decrypt(query.user.replace(\" \",\"+\"),config.get(\"keys.aesKey\"));\n        let decryptVal = decrypted.toString(CryptoJS.enc.Utf8).split(\"#\");\n        let timeOutError = setTimeout(function (){\n            throw new HttpException('Tiempo de respuesta excedido.', HttpStatus.REQUEST_TIMEOUT);\n        },config.get(\"globals.timeOut\"))\n            let rolesSoap:any = await this.authService.getRoleSoap(query.app_uniqueid,decryptVal[0]);\n            clearTimeout(timeOutError)\n            if(rolesSoap.result){\n                let token = jwt.sign({\n                    permissions: rolesSoap.data,\n                }, config.get(\"keys.jwtKey\"), {\n                    expiresIn: config.get(\"globals.expJWT\")\n                });\n                return res.status(rolesSoap.code).json({token:token})\n            }else{\n                throw new HttpException('Error de Servidor', rolesSoap.code);\n            }\n\n\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/controllers/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './local.strategy';\nimport {AuthController} from \"./auth.controller\";\nimport { JwtModule } from '@nestjs/jwt';\nimport * as config from \"config\";\nimport {JwtStrategy} from \"./jwt.strategy\";\n\n@Module({\n    controllers: [AuthController],\n    imports: [PassportModule,\n        JwtModule.register({\n            secret: config.get(\"keys.jwtKey\"),\n            signOptions: { expiresIn: config.get(\"globals.expJWT\") },\n        }),],\n    providers: [AuthService, LocalStrategy, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAuthSoap\n                            \n                            \n                                getRoleSoap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/controllers/auth/auth.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAuthSoap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthSoap(args)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/auth/auth.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRoleSoap\n                        \n                        \n                    \n                \n            \n            \n                \ngetRoleSoap(token_app_client, username)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token_app_client\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new WinstonLogger(AuthService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/auth/auth.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {HttpStatus, Injectable} from '@nestjs/common';\nimport * as Soap from \"soap\";\nimport * as validate from 'uuid-validate';\nimport {WinstonLogger} from \"@payk/nestjs-winston\";\nimport validator from \"validator\";\nimport * as config from \"config\";\n\n@Injectable()\nexport class AuthService {\n    private readonly logger = new WinstonLogger(AuthService.name);\n\n    constructor() {}\n\n     async getAuthSoap(args){\n        try{\n            return new Promise  ((resolve, reject) => {\n                Soap.createClient(config.get(\"soap.auth\"), async function (err, client) {\n                    if (err !== null) {\n                        return resolve({result: false, guid: '', code: HttpStatus.INTERNAL_SERVER_ERROR});\n                    }\n                    client.validate(args, function (err, result) {\n                        if (err !== null) {\n                            return resolve({result: false, guid: '', code: HttpStatus.INTERNAL_SERVER_ERROR});\n                        }\n                        let guid = result.validateResult.replace(/\"/g,'');\n\n                        if (validate(guid)) {\n                            return resolve({result: true, code: HttpStatus.OK, guid: guid})\n                        } else {\n                            return resolve({result: false, code: HttpStatus.UNAUTHORIZED, guid: ''});\n                        }\n                    });\n\n\n                });\n            })\n        }catch (e) {\n            return {result:false,guid:'',code:HttpStatus.INTERNAL_SERVER_ERROR};\n\n        }\n\n    }\n    getRoleSoap(token_app_client,username){\n        try{\n            return new Promise  ((resolve, reject) => {\n\n                Soap.createClient(config.get(\"soap.roles\"), function(err, client) {\n            if (err !== null) {\n                return resolve({result:false,code:HttpStatus.UNAUTHORIZED,data:{}});\n\n            }\n            return client.getDatosDelUsuario({\n                token_app_client:token_app_client,\n                username:username\n            }, function (err, result) {\n                if (err !== null) {\n                    return resolve({result:false,code:HttpStatus.UNAUTHORIZED,data:{}});\n\n                }\n                if(validator.isJSON(result.getDatosDelUsuarioResult)){\n                    let resultJson = JSON.parse(result.getDatosDelUsuarioResult)\n\n                    if(resultJson.length > 0){\n                        resultJson[0].Roles = resultJson[0].Roles.split(\",\").map((a) => a.trim());\n                        return resolve({result:true,code:HttpStatus.OK,data:resultJson[0]});\n\n                    }else{\n                        return resolve({result:false,code:HttpStatus.UNAUTHORIZED,data:{}});\n\n                    }\n\n                }else{\n                    return resolve({result:false,code:HttpStatus.UNAUTHORIZED,data:{}});\n\n                }\n            })\n        });\n            })\n        }catch (e) {\n            return {result:false,data:{},code:HttpStatus.INTERNAL_SERVER_ERROR};\n\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthUserDtoDto.html":{"url":"classes/AuthUserDtoDto.html","title":"class - AuthUserDtoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthUserDtoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/auth/dto/AuthUserDto.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                app_uniqueid\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            app_uniqueid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/auth/dto/AuthUserDto.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/auth/dto/AuthUserDto.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/controllers/auth/dto/AuthUserDto.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthUserDtoDto {\n    username: string;\n    password: string;\n    app_uniqueid:string;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/auth/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/auth/jwt-auth.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable, UnauthorizedException} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n\n    handleRequest(err, user, info) {\n        if (err || !user) {\n            throw err || new UnauthorizedException();\n        }\n        return user;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/controllers/auth/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/auth/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport * as config from \"config\";\n\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: config.get(\"keys.jwtKey\"),\n        });\n    }\n\n    async validate(payload: any) {\n        return payload.userData ;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/controllers/auth/local.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(req)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/auth/local.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Strategy} from 'passport-local';\nimport {PassportStrategy} from '@nestjs/passport';\nimport {Injectable, UnauthorizedException, Request, HttpException, HttpStatus} from '@nestjs/common';\nimport {AuthService} from './auth.service';\nimport * as config from \"config\";\nimport * as jwt from 'jsonwebtoken';\nimport {AuthUserDtoDto} from \"./dto/AuthUserDto.dto\";\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private authService: AuthService) {\n        super({passReqToCallback: true});\n    }\n\n    async validate(@Request() req): Promise {\n        const res:any = await this.authService.getAuthSoap(req.body);\n        if (!res.result) {\n            throw new UnauthorizedException();\n        }\n        const resRoles:any = await this.authService.getRoleSoap(req.body.app_uniqueid,req.body.username);\n        if (!resRoles.result) {\n            throw new UnauthorizedException();\n        }\n        return jwt.sign({\n            userData: resRoles.data,\n        }, config.get(\"keys.jwtKey\"), {\n            expiresIn: config.get(\"globals.expJWT\")\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoggedController.html":{"url":"controllers/LoggedController.html","title":"controller - LoggedController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoggedController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/logged/logged.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                isLogged\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isLogged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLogged\n                        \n                        \n                    \n                \n            \n            \n                \nisLogged(res: Response, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/controllers/logged/logged.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, Post, Res, UseGuards, Request, Get} from '@nestjs/common';\nimport {Response} from \"express\";\nimport * as jwt from 'jsonwebtoken';\nimport { WinstonLogger } from '@payk/nestjs-winston';\nimport * as config from \"config\";\nimport {JwtAuthGuard} from \"../auth/jwt-auth.guard\";\n\n@Controller('isLogged')\nexport class LoggedController {\n    private readonly logger = new WinstonLogger(LoggedController.name);\n\n    constructor() {}\n\n    @UseGuards(JwtAuthGuard)\n    @Get()\n    isLogged(@Res() res: Response, @Request() req){\n        return res.status(200).json({statusCode:200,message:\"Valid Token\"})\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/controllers/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/controllers/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/controllers/auth/dto/AuthUserDto.dto.ts\n            \n            class\n            AuthUserDtoDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/controllers/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/controllers/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/controllers/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/controllers/logged/logged.controller.ts\n            \n            controller\n            LoggedController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/cli : ^7.5.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @payk/nestjs-winston : ^1.2.1\n        \n            @types/crypto-js : ^4.0.1\n        \n            config : ^3.3.4\n        \n            crypto-js : ^4.0.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            soap : ^0.36.0\n        \n            uuid-validate : 0.0.3\n        \n            validator : ^13.5.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
